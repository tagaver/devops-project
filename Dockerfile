# ШАГ 1: Выбираем базовый шаблон (образ)
# Мы говорим Docker: "Не начинай с нуля. Возьми официальный готовый образ,
# в котором уже есть установленный Python версии 3.9 в его 'slim' (облегченной) конфигурации".
# Это как взять готовый корпус для ПК, в котором уже есть материнская плата.
FROM python:3.9-slim

# ШАГ 2: Создаем рабочую папку внутри контейнера
# Мы говорим: "Внутри контейнера создай папку с именем /app.
# Все последующие команды будут выполняться из этой папки".
WORKDIR /app

# ШАГ 3: Копируем "список покупок" и "закупаемся"
# Сначала копируем только один файл - requirements.txt.
# Это хитрость для ускорения сборки в будущем. Docker кэширует шаги, и если этот
# файл не меняется, Docker не будет заново устанавливать зависимости.
COPY requirements.txt .

# Теперь запускаем команду УСТАНОВКИ зависимостей. Эта команда выполняется
# ОДИН РАЗ во время сборки образа.
RUN pip install -r requirements.txt

# ШАГ 4: Копируем весь исходный код нашего приложения
# Теперь, когда все зависимости установлены, копируем все остальные файлы
# из нашей локальной папки в рабочую папку /app внутри контейнера.
# В нашем случае это скопирует app.py.
COPY . .

# ШАГ 5: Указываем команду для запуска приложения
# Это инструкция для Docker, ЧТО нужно запустить, когда контейнер СТАРТУЕТ.
# Это НЕ выполняется во время сборки. Это команда по умолчанию для запуска.
# ["python", "app.py"] - это безопасный способ записать команду "python app.py".
CMD ["python", "app.py"]